arrange(zone)
epl24ab_sum <- riv_type_metrics %>%
group_by(EPL24_ab, zone) %>%
summarise(count = n(),.groups = 'drop') %>%
pivot_wider(names_from = EPL24_ab,
values_from = count, values_fill = 0) %>%
relocate(WP, .before = MP)%>%
relocate(NP, .after = PP) %>%
# Add row-wise TOTAL
rowwise() %>%
mutate(Total = sum(c_across(where(is.numeric)))) %>%
ungroup() %>%
# Add TOTAL row (column-wise sums)
bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
# Add EPLindex
mutate(EPLI = ((WP*3)+(MP*2)+(PP*1)+(NP*0))/((WP+MP+PP+NP)*3)) %>%
mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
arrange(zone)
View(epl18ab_sum)
View(epl18ab_sum)
View(epl24ab_sum)
EPLI <- epl24ab_sum %>%
select(zone, EPLI) %>%
rename(EPLI24 = EPLI) %>%
left_join(epl18ab_sum, by ="zone") %>%
rename(EPLI18 = EPLI) %>%
rename(Biome = T_BIOME) %>%
select(Biome,EPLI18, EPLI24) %>%
pivot_longer(cols = c(2,3), names_to = "Year", values_to = "EPLI") %>%
mutate(Year = case_when(
Year == "EPLI18" ~ "2018",
Year == "EPLI24" ~ "2024",
TRUE ~ Year
))
EPLI <- epl24ab_sum %>%
select(zone, EPLI) %>%
rename(EPLI24 = EPLI) %>%
left_join(epl18ab_sum, by ="zone") %>%
rename(EPLI18 = EPLI) %>%
rename(Biome = zone) %>%
select(Biome,EPLI18, EPLI24) %>%
pivot_longer(cols = c(2,3), names_to = "Year", values_to = "EPLI") %>%
mutate(Year = case_when(
Year == "EPLI18" ~ "2018",
Year == "EPLI24" ~ "2024",
TRUE ~ Year
))
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = zone)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024"))
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = zone)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024"))
epli_line_plot
View(EPLI)
EPLI <- epl24ab_sum %>%
select(zone, EPLI) %>%
rename(EPLI24 = EPLI) %>%
left_join(epl18ab_sum, by ="zone") %>%
rename(EPLI18 = EPLI) %>%
rename(Zone = zone) %>%
select(Zone,EPLI18, EPLI24) %>%
pivot_longer(cols = c(2,3), names_to = "Year", values_to = "EPLI") %>%
mutate(Year = case_when(
Year == "EPLI18" ~ "2018",
Year == "EPLI24" ~ "2024",
TRUE ~ Year
))
View(EPLI)
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = zone)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024"))
epli_line_plot
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = Zone)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024"))
epli_line_plot
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = Zone)) +
geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
geom_point(aes(color = Zone), size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024")) +
scale_color_manual(values = c(
"Mountain streams" = "black",
"Upland foothills" = "black",
"Lowland foothills" = "grey40",
"Lowlands" = "grey40",
"Total" = "black"
)) +
scale_linetype_manual(values = c(
"Mountain streams" = "dotted",
"Upland foothills" = "dashed",
"Lowland foothills" = "dashed",
"Lowlands" = "longdash",
"Total" = "solid"
)) +
theme(legend.title = element_blank())
epli_line_plot
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = Zone)) +
geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
geom_point(aes(color = Zone), size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024")) +
scale_color_manual(values = c(
"Mountain stream" = "black",
"Upland foothill" = "black",
"Lowland foothill" = "grey40",
"Lowland river" = "grey40",
"Total" = "black"
)) +
scale_linetype_manual(values = c(
"Mountain stream" = "dotted",
"Upland foothill" = "dashed",
"Lowland foothill" = "dashed",
"Lowland river" = "longdash",
"Total" = "solid"
)) +
theme(legend.title = element_blank())
epli_line_plot
epli_line_plot <- ggplot(EPLI, aes(x = Year, y = EPLI, group = Zone)) +
geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
geom_point(aes(color = Zone), size = 2) +
theme_minimal() +
labs(x = "Year", y = "EPLI") +
scale_x_discrete(limits = c("2018", "2024")) +
scale_color_manual(values = c(
"Mountain stream" = "black",
"Upper foothill" = "black",
"Lower foothill" = "grey40",
"Lowland river" = "grey40",
"Total" = "black"
)) +
scale_linetype_manual(values = c(
"Mountain stream" = "dotted",
"Upper foothill" = "dashed",
"Lower foothill" = "dashed",
"Lowland river" = "longdash",
"Total" = "solid"
)) +
theme(legend.title = element_blank())
epli_line_plot
#export the graph
ggsave(
filename = "outputs/epl24_riv_bar_plot.jpeg", # File name
plot = epl24_bar_plot,                   # Plot object
device = "jpeg",                        # File format
width = 16, height = 12, units = "cm",   # Dimensions
dpi = 300                               # Resolution
)
# Use NBA package to make EPL graph (need high res output for booklet)
EPL24 <- epl24ab_sum %>%
rename(`Well Protected` = WP,
`Moderately Protected` = MP,
`Poorly Protected` = PP,
`Not Protected` = NP ) # %>%
epl24_bar_plot <- nba_plot(EPL24,
`zone`,
2:5,
CHRT = "bar",
NUM = TRUE,
LAB = "Percentage of ecosystem types",
SAVE = NULL)
# load nbaR package : first run this in console devtools::install_github("SANBI-NBA/nbaR")
library(nbaR)
# Use NBA package to make EPL graph (need high res output for booklet)
EPL24 <- epl24ab_sum %>%
rename(`Well Protected` = WP,
`Moderately Protected` = MP,
`Poorly Protected` = PP,
`Not Protected` = NP ) # %>%
epl24_bar_plot <- nba_plot(EPL24,
`zone`,
2:5,
CHRT = "bar",
NUM = TRUE,
LAB = "Percentage of ecosystem types",
SAVE = NULL)
epl24_bar_plot
#export the graph
ggsave(
filename = "outputs/epl24_riv_bar_plot.jpeg", # File name
plot = epl24_bar_plot,                   # Plot object
device = "jpeg",                        # File format
width = 16, height = 12, units = "cm",   # Dimensions
dpi = 300                               # Resolution
)
#export the graph
ggsave(
filename = "outputs/epli_riv_line_plot.jpeg", # File name
plot = epli_line_plot,                   # Plot object
device = "jpeg",                        # File format
width = 16, height = 12, units = "cm",   # Dimensions
dpi = 300                               # Resolution
)
View(riv_type_metrics)
View(riv_type_18)
View(riv)
# alt way to summarise to get river length per class
long <- riv %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
)
View(long)
View(riv)
long <- riv %>%
select(fid_1, RIVTYPE, PES2014, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
)
View(long)
long <- riv %>%
select(fid_1, RIVTYPE, PES2014, PES2018, leng, leng_pa18, leng_pa24)
View(long)
long <- riv %>%
select(fid_1, RIVTYPE, PES2014, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
)
View(long)
ong <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
)
View(long)
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
)
View(long)
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
) %>%
mutate(PES = replace_na(PES, 0))
View(long)
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
) %>%
mutate(leng = replace_na(leng, 0))
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES"
) %>%
mutate(across(everything(), ~replace_na(.x, 0)))
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = starts_with("PES"),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa") %>%
mutate(across(everything(), ~replace_na(.x, 0)))
View(long)
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(PES2018, PES2014),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
left_join (
riv %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa"),
by = c("RIVTYPE", "YEAR")) %>%
mutate(across(everything(), ~replace_na(.x, 0)))
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(PES2018, PES2024),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
left_join (
riv %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa"),
by = c("RIVTYPE", "YEAR")) %>%
mutate(across(everything(), ~replace_na(.x, 0)))
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(PES2018, PES2024),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
left_join (
riv %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa"),
by = c("RIVTYPE", "YEAR"))
View(long)
# alt way to summarise to get river length per class
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(PES2018, PES2024),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
left_join (
riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa"),
by = c("RIVTYPE", "YEAR")) %>%
mutate(across(everything(), ~replace_na(.x, 0)))
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(PES2018, PES2024),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
left_join (
riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa"),
by = c("RIVTYPE", "YEAR"))
View(long)
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018) %>%
pivot_longer(
cols = c(PES2018, PES2024),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES") %>%
left_join (
riv %>%
select(fid_1, RIVTYPE,leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(leng_pa18, leng_pa24),
names_to = "YEAR",
names_prefix = "leng_pa",
values_to = "leng_pa"),
by = c("RIVTYPE", "YEAR"))
View(long)
long <- riv %>%
select(fid_1, RIVTYPE, PES2024, PES2018, leng, leng_pa18, leng_pa24) %>%
pivot_longer(
cols = c(PES2018, PES2024),
names_to = "YEAR",
names_prefix = "PES",
values_to = "PES")
View(long)
View(epl18ab_sum)
# make summary of extent of EPL
epl18ab_sum_ext <- riv_type_metrics %>%
group_by(EPL18_ab, zone) %>%
summarise(length = sum(tot_leng18),.groups = 'drop') %>%
pivot_wider(names_from = EPL18_ab,
values_from = length, values_fill = 0) %>%
relocate(WP, .before = MP)%>%
relocate(NP, .after = PP) %>%
# Add row-wise TOTAL
rowwise() %>%
mutate(Total = sum(c_across(where(is.numeric)))) %>%
ungroup() %>%
# Add TOTAL row (column-wise sums)
bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
arrange(zone)
View(epl18ab_sum_ext)
# make summary of extent of EPL
epl18ab_sum_ext <- riv_type_metrics %>%
group_by(EPL18_ab, zone) %>%
summarise(length = round(sum(tot_leng18)/100, 0),.groups = 'drop') %>%
pivot_wider(names_from = EPL18_ab,
values_from = length, values_fill = 0) %>%
relocate(WP, .before = MP)%>%
relocate(NP, .after = PP) %>%
# Add row-wise TOTAL
rowwise() %>%
mutate(Total = sum(c_across(where(is.numeric)))) %>%
ungroup() %>%
# Add TOTAL row (column-wise sums)
bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
arrange(zone)
View(epl18ab_sum_ext)
# make summary of extent of EPL
epl18ab_sum_ext <- riv_type_metrics %>%
group_by(EPL18_ab, zone) %>%
summarise(length = round(sum(tot_leng18)/1000, 0),.groups = 'drop') %>%
pivot_wider(names_from = EPL18_ab,
values_from = length, values_fill = 0) %>%
relocate(WP, .before = MP)%>%
relocate(NP, .after = PP) %>%
# Add row-wise TOTAL
rowwise() %>%
mutate(Total = sum(c_across(where(is.numeric)))) %>%
ungroup() %>%
# Add TOTAL row (column-wise sums)
bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
arrange(zone)
epl18ab_sum_prpext <- epl18ab_sum_ext %>%
filter(zone != "Total") %>%
mutate(across(c(WP, MP, PP, NP), ~ round(.x / Total, 3))) %>%
select(zone, WP, MP, PP, NP)
View(epl18ab_sum_prpext)
# 2024 summaries
# make summary counts of EPL
epl24ab_sum <- riv_type_metrics %>%
group_by(EPL24_ab, zone) %>%
summarise(count = n(),.groups = 'drop') %>%
pivot_wider(names_from = EPL24_ab,
values_from = count, values_fill = 0) %>%
relocate(WP, .before = MP)%>%
relocate(NP, .after = PP) %>%
# Add row-wise TOTAL
rowwise() %>%
mutate(Total = sum(c_across(where(is.numeric)))) %>%
ungroup() %>%
# Add TOTAL row (column-wise sums)
bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
# Add EPLindex
mutate(EPLI = ((WP*3)+(MP*2)+(PP*1)+(NP*0))/((WP+MP+PP+NP)*3)) %>%
mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
arrange(zone)
# make summary of extent of EPL
epl24ab_sum_ext <- riv_type_metrics %>%
group_by(EPL24_ab, zone) %>%
summarise(length = round(sum(tot_leng18)/1000, 0),.groups = 'drop') %>%
pivot_wider(names_from = EPL24_ab,
values_from = length, values_fill = 0) %>%
relocate(WP, .before = MP)%>%
relocate(NP, .after = PP) %>%
# Add row-wise TOTAL
rowwise() %>%
mutate(Total = sum(c_across(where(is.numeric)))) %>%
ungroup() %>%
# Add TOTAL row (column-wise sums)
bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
arrange(zone)
epl24ab_sum_prpext <- epl24ab_sum_ext %>%
filter(zone != "Total") %>%
mutate(across(c(WP, MP, PP, NP), ~ round(.x / Total, 3))) %>%
select(zone, WP, MP, PP, NP)
View(epl24ab_sum_prpext)
